# Azure Open AI API Key
AZURE_OPENAI_API_KEY="{your-api-key}"
AZURE_OPENAI_ENDPOINT="https://{openai-name}.openai.azure.com"
OPENAI_API_VERSION="2024-02-15-preview"

GITHUB_ORG=""
GITHUB_REPONAME="Glav.HelperScripts" # Name of repository
GITHUB_TOKEN="{your-github-token}" # PAT - Personal access token with read access to repo

ENABLE_TRACE_LOGGING="true"

# If using App insights
#APPLICATION_INSIGHTS_CONNECTION_STRING="InstrumentationKey={YOUR-APPINSIGHTS-KEY}};IngestionEndpoint=https://australiaeast-1.in.applicationinsights.azure.com/;LiveEndpoint=https://australiaeast.livediagnostics.monitor.azure.com/;ApplicationId=3dff6b93-06c3-4901-b8a6-28e4f77db127"
#OTEL_EXPORTER_OTLP_ENDPOINT=https://australiaeast-1.in.applicationinsights.azure.com/ # OpenTelemetry Collector otlp endpoint (exposed from docker-compose)

OTEL_EXPORTER_OTLP_ENDPOINT=http://host.docker.internal:4318  # If running Aspire docker container locally - see below

# Run docker aspire dashboard
# docker run --rm -it -p 18888:18888 -p 4318:18889 -d --name aspire-dashboard     mcr.microsoft.com/dotnet/aspire-dashboard:9.0
# Run this outside of devcontainer, dashboard then is accessible on http://localhost:18888

# Will require a token, you can get this by examining the logs of the container and looking for the 't' parameter on the Url
# eg. docker logs {container-id}
# Will see something like 'Login to the dashboard at http://localhost:18888/login?t=9583bf2935ee3d3538d54e676984e512' where t=..... is the access token

# Environment
ENVIRONMENT=development
DEBUG=True

AZURE_AI_FOUNDRY_CONNECTION_STRING="{ai-foundry-project-connection-string}"
